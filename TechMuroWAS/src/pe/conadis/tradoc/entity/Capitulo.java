package pe.conadis.tradoc.entity;

// Generated Feb 27, 2014 5:00:05 PM by Hibernate Tools 4.0.0

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import pe.conadis.tradoc.util.Constants;

/**
 * Capitulo generated by hbm2java
 */
@Entity
@Table(name = "X_CAPITULO")
public class Capitulo implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7047402425550163596L;
	
	private Integer idcapitulo;
	private Nota notaByIdnotafinal;
	private Nota notaByIdnotainicial;
	private Producto producto;
	private String nombre;
	private String descripcion;
	private Date fechacreacion;
	private Character estado;
	private Integer orden;
	private List<Subcapitulo> subcapitulos = new ArrayList<Subcapitulo>(0);
	private Date fechaModificacion;

	public Capitulo() {
	}
	
	public static Capitulo crearSinCapitulo(Producto producto) {
		Capitulo cap = new Capitulo();
		cap.setIdcapitulo(0);
		cap.setNombre(Constants.SINCAP);
		cap.setOrden(1);
		cap.setProducto(producto);
		return cap;
	}

	public Capitulo(Integer idcapitulo) {
		this.idcapitulo = idcapitulo;
	}
	
	public Capitulo(Producto producto) {
		this.producto = producto;
	}

	public Capitulo(Integer idcapitulo, Nota notaByIdnotafinal,
			Nota notaByIdnotainicial, Producto producto, String nombre,
			String descripcion, Date fechacreacion, Character estado,
			Integer orden, List<Subcapitulo> subcapitulos, Date fechaModificacion) {
		this.idcapitulo = idcapitulo;
		this.notaByIdnotafinal = notaByIdnotafinal;
		this.notaByIdnotainicial = notaByIdnotainicial;
		this.producto = producto;
		this.nombre = nombre;
		this.descripcion = descripcion;
		this.fechacreacion = fechacreacion;
		this.estado = estado;
		this.orden = orden;
		this.subcapitulos = subcapitulos;
		this.fechaModificacion = fechaModificacion;
	}

	@Id
	@Column(name = "IDCAPITULO", unique = true, nullable = false, precision = 22, scale = 0)
	//@SequenceGenerator(name = "seq_capitulo", sequenceName = "SEQ_CAPITULO", allocationSize = 1)
   // @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq_capitulo")
	@GeneratedValue(strategy=GenerationType.AUTO)
	public Integer getIdcapitulo() {
		return this.idcapitulo;
	}

	public void setIdcapitulo(Integer idcapitulo) {
		this.idcapitulo = idcapitulo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDNOTAFINAL")
	public Nota getNotaByIdnotafinal() {
		return this.notaByIdnotafinal;
	}

	public void setNotaByIdnotafinal(Nota notaByIdnotafinal) {
		this.notaByIdnotafinal = notaByIdnotafinal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDNOTAINICIAL")
	public Nota getNotaByIdnotainicial() {
		return this.notaByIdnotainicial;
	}

	public void setNotaByIdnotainicial(Nota notaByIdnotainicial) {
		this.notaByIdnotainicial = notaByIdnotainicial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDPRODUCTO")
	public Producto getProducto() {
		return this.producto;
	}

	public void setProducto(Producto producto) {
		this.producto = producto;
	}

	@Column(name = "NOMBRE", length = 200)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "DESCRIPCION", length = 2000)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHACREACION", length = 7)
	public Date getFechacreacion() {
		return this.fechacreacion;
	}

	public void setFechacreacion(Date fechacreacion) {
		this.fechacreacion = fechacreacion;
	}

	@Column(name = "ESTADO", length = 1)
	public Character getEstado() {
		return this.estado;
	}

	public void setEstado(Character estado) {
		this.estado = estado;
	}

	@Column(name = "ORDEN", precision = 22, scale = 0)
	public Integer getOrden() {
		return this.orden;
	}

	public void setOrden(Integer orden) {
		this.orden = orden;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "capitulo")
	public List<Subcapitulo> getSubcapitulos() {
		return this.subcapitulos;
	}

	public void setSubcapitulos(List<Subcapitulo> subcapitulos) {
		this.subcapitulos = subcapitulos;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHAMODIFICACION", length = 7)
	public Date getFechaModificacion() {
		return fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((idcapitulo == null) ? 0 : idcapitulo.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Capitulo other = (Capitulo) obj;
		if (idcapitulo == null) {
			if (other.idcapitulo != null)
				return false;
		} else if (!idcapitulo.equals(other.idcapitulo))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Capitulo [idcapitulo=" + idcapitulo + ", notaByIdnotafinal="
				+ notaByIdnotafinal + ", notaByIdnotainicial="
				+ notaByIdnotainicial + ", producto=" + producto + ", nombre="
				+ nombre + ", descripcion=" + descripcion + ", fechacreacion="
				+ fechacreacion + ", estado=" + estado + ", orden=" + orden
				+ ", fechaModificacion=" + fechaModificacion + "]";
	}

	
	
	

}
